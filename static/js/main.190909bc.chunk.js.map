{"version":3,"sources":["components/DashboardTile.jsx","components/HospitalCard.jsx","components/Loader.jsx","store/DataStore.js","store/RootStore.js","App.jsx","serviceWorker.js","i18n.js","index.js"],"names":["DashboardTile","title","total","newCases","icon","bg","DashboardTileStyles","Header","src","alt","New","start","end","delay","countUpRef","ref","Count","styled","div","props","background","p","HospitalCard","hospitalData","useTranslation","t","i18n","cumulative_local","cumulative_foreign","cumulative_total","treatment_local","treatment_foreign","treatment_total","hospital","HospitalCardStyles","language","name_si","name_ta","name","translateName","CardData","Loader","LoaderStyles","className","DataStore","this","isLoading","axios","get","response","transaction","_dataRegistry","data","Object","keys","length","fetchData","observable","rootStore","stores","dataStore","rootStoreContext","createContext","App","observer","useContext","useEffect","initData","update_date_time","local_new_cases","local_total_cases","local_deaths","local_new_deaths","local_recovered","hospital_data","local_total_number_of_individuals_in_hospitals","changeLanguage","lng","DashboardStyles","LanguageSelection","style","textDecoration","onClick","InfoContainer","TotalHospitalCount","HospitalListContainer","map","index","key","LastUpdatedContainer","href","data-size","aria-label","Boolean","window","location","hostname","match","use","initReactI18next","init","resources","en","translation","APP_TITLE","CASES","DEATHS","RECOVERED","HOSPITAL_STATUS","TOTAL_INDIVIDUALS_IN_HOSPITALS","TESTED","TREATMENT","LOCAL","FOREIGN","TOTAL","LAST_UPDATED","DATA_SOURCE","sn","ta","keySeparator","interpolation","escapeValue","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.190909bc.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport CountUp from \"react-countup\";\n\nconst DashboardTile = ({ title, total, newCases, icon, bg }) => {\n\treturn (\n\t\t<DashboardTileStyles bg={bg}>\n\t\t\t<Header>\n\t\t\t\t<img src={icon} alt=\"COIVD-19 status Sri Lanka\" />\n\t\t\t\t<h1>{title}</h1>\n\t\t\t\t{newCases !== 0 && newCases && (\n\t\t\t\t\t<New>\n\t\t\t\t\t\t+\n\t\t\t\t\t\t<CountUp start={0} end={newCases ? newCases : 0} delay={0}>\n\t\t\t\t\t\t\t{({ countUpRef }) => (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<span ref={countUpRef} />\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</CountUp>\n\t\t\t\t\t</New>\n\t\t\t\t)}\n\t\t\t</Header>\n\t\t\t<Count>\n\t\t\t\t<CountUp start={0} end={total ? total : 0} delay={0}>\n\t\t\t\t\t{({ countUpRef }) => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<span ref={countUpRef} />\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</CountUp>\n\t\t\t</Count>\n\t\t</DashboardTileStyles>\n\t);\n};\n\nexport default DashboardTile;\n\nconst DashboardTileStyles = styled.div`\n\twidth: 300px;\n\tborder-radius: 8px;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tmargin: 1rem;\n\tbox-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.14);\n\n\t${props => {\n\t\tswitch (props.bg) {\n\t\t\tcase \"warning\":\n\t\t\t\treturn {\n\t\t\t\t\tbackground: \"linear-gradient(to right, #f7971e, #ffd200); \"\n\t\t\t\t};\n\t\t\tcase \"danger\":\n\t\t\t\treturn {\n\t\t\t\t\tbackground: \"linear-gradient(to right, #ed213a, #93291e);  \"\n\t\t\t\t};\n\t\t\tcase \"success\":\n\t\t\t\treturn {\n\t\t\t\t\tbackground: \"linear-gradient(to right, #11998e, #38ef7d); \"\n\t\t\t\t};\n\t\t\tcase \"info\":\n\t\t\t\treturn {\n\t\t\t\t\tbackground: \"linear-gradient(to right, #8e2de2, #4a00e0);\"\n\t\t\t\t};\n\t\t\tdefault:\n\t\t}\n\t}}\n`;\n\nconst Header = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tborder-bottom: 1px solid;\n\twidth: 100%;\n\n\th1 {\n\t\tfont-size: 26px;\n\t\tletter-spacing: 0;\n\t\tline-height: 32px;\n\t\tfont-weight: 320;\n\t\tmargin-right: auto;\n\t\tword-break: break-word;\n\t}\n\n\timg {\n\t\tpadding: 0 1rem;\n\t\theight: 32px;\n\t}\n`;\n\nconst New = styled.p`\n\tfont-size: 26px;\n\tletter-spacing: 0;\n\tline-height: 19px;\n\tfont-weight: 800;\n\tpadding: 0 1rem;\n`;\n\nconst Count = styled.p`\n\tfont-size: 50px;\n\tfont-weight: 400;\n\tletter-spacing: 0;\n\tline-height: 24px;\n`;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\n\nconst HospitalCard = ({ hospitalData }) => {\n\tconst { t, i18n } = useTranslation();\n\tconst {\n\t\tcumulative_local,\n\t\tcumulative_foreign,\n\t\tcumulative_total,\n\t\ttreatment_local,\n\t\ttreatment_foreign,\n\t\ttreatment_total,\n\t\thospital\n\t} = hospitalData;\n\n\tconst translateName = () => {\n\t\tconst selectedLan = i18n.language;\n\t\tswitch (selectedLan) {\n\t\t\tcase \"sn\":\n\t\t\t\treturn hospital.name_si;\n\t\t\tcase \"ta\":\n\t\t\t\treturn hospital.name_ta;\n\t\t\tdefault:\n\t\t\t\treturn hospital.name;\n\t\t}\n\t};\n\n\treturn (\n\t\t<HospitalCardStyles>\n\t\t\t<h3>{translateName()}</h3>\n\t\t\t<CardData>\n\t\t\t\t<div>\n\t\t\t\t\t<h4>{t(\"TESTED\")}</h4>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{t(\"LOCAL\")} : {cumulative_local}{\" \"}\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{t(\"FOREIGN\")} : {cumulative_foreign}{\" \"}\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{t(\"TOTAL\")} : {cumulative_total}{\" \"}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<h4> {t(\"TREATMENT\")}</h4>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{t(\"LOCAL\")} : {treatment_local}{\" \"}\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{t(\"FOREIGN\")} : {treatment_foreign}{\" \"}\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{t(\"TOTAL\")} : {treatment_total}{\" \"}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</CardData>\n\t\t</HospitalCardStyles>\n\t);\n};\n\nexport default HospitalCard;\n\nconst HospitalCardStyles = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\n\tmargin: 1rem;\n\tborder-radius: 6px;\n\tpadding: 1rem;\n\tbox-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.14);\n\n\tbackground: #4b6cb7; /* fallback for old browsers */\n\tbackground: -webkit-linear-gradient(\n\t\tto top,\n\t\t#182848,\n\t\t#4b6cb7\n\t); /* Chrome 10-25, Safari 5.1-6 */\n\tbackground: linear-gradient(\n\t\tto top,\n\t\t#182848,\n\t\t#4b6cb7\n\t); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n\n\th3 {\n\t\tpadding: 0 0.5rem;\n\t\ttext-align: center;\n\t\tmax-width: 300px;\n\t\tfont-weight: 300;\n\t}\n`;\n\nconst CardData = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\tflex-wrap: wrap;\n\n\tdiv {\n\t\twidth: 150px;\n\t\ttext-align: center;\n\t}\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Loader = () => {\n\treturn (\n\t\t<LoaderStyles>\n\t\t\t<div className=\"lds-hourglass\"></div>\n\t\t</LoaderStyles>\n\t);\n};\n\nexport default Loader;\n\nconst LoaderStyles = styled.div`\n\tmargin: 100px 0;\n\t.lds-hourglass {\n\t\tdisplay: inline-block;\n\t\tposition: relative;\n\t\twidth: 80px;\n\t\theight: 80px;\n\t}\n\t.lds-hourglass:after {\n\t\tcontent: \" \";\n\t\tdisplay: block;\n\t\tborder-radius: 50%;\n\t\twidth: 0;\n\t\theight: 0;\n\t\tmargin: 8px;\n\t\tbox-sizing: border-box;\n\t\tborder: 32px solid #fff;\n\t\tborder-color: #fff transparent #fff transparent;\n\t\tanimation: lds-hourglass 1.2s infinite;\n\t}\n\t@keyframes lds-hourglass {\n\t\t0% {\n\t\t\ttransform: rotate(0);\n\t\t\tanimation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n\t\t}\n\t\t50% {\n\t\t\ttransform: rotate(900deg);\n\t\t\tanimation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n\t\t}\n\t\t100% {\n\t\t\ttransform: rotate(1800deg);\n\t\t}\n\t}\n`;\n","import axios from \"axios\";\nimport { observable, transaction } from \"mobx\";\nclass DataStore {\n\t@observable\n\t_dataRegistry = {};\n\n\t@observable\n\tisLoading = false;\n\n\tasync fetchData() {\n\t\tthis.isLoading = true;\n\t\ttry {\n\t\t\tconst response = await axios.get(\n\t\t\t\t\"https://hpb.health.gov.lk/api/get-current-statistical\"\n\t\t\t);\n\t\t\ttransaction(() => {\n\t\t\t\tthis._dataRegistry = response.data.data;\n\t\t\t});\n\t\t} catch (error) {}\n\t\tthis.isLoading = false;\n\t}\n\tasync initData() {\n\t\tif (Object.keys(this._dataRegistry).length === 0) await this.fetchData();\n\t}\n}\n\nexport default DataStore;\n","import { createContext, useContext } from \"react\";\nimport DataStore from \"./DataStore\";\n\nclass RootStore {\n\tconstructor() {\n\t\tthis.stores = {\n\t\t\tdataStore: new DataStore()\n\t\t};\n\t}\n}\n\nconst rootStore = new RootStore();\n\nexport const rootStoreContext = createContext(rootStore);\nexport default rootStore;\nexport const useStore = () => useContext(rootStoreContext);\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport CountUp from \"react-countup\";\nimport GitHubButton from \"react-github-btn\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport DashboardTile from \"./components/DashboardTile\";\nimport HospitalCard from \"./components/HospitalCard\";\nimport Loader from \"./components/Loader\";\nimport { useStore } from \"./store/RootStore\";\n\nconst App = observer(() => {\n\tconst { t, i18n } = useTranslation();\n\tconst { stores } = useStore();\n\tconst { dataStore } = stores;\n\n\tuseEffect(() => {\n\t\tdataStore.initData();\n\t}, []);\n\n\tconst {\n\t\tupdate_date_time,\n\t\tlocal_new_cases,\n\t\tlocal_total_cases,\n\t\tlocal_deaths,\n\t\tlocal_new_deaths,\n\t\tlocal_recovered,\n\t\thospital_data,\n\t\tlocal_total_number_of_individuals_in_hospitals\n\t} = dataStore._dataRegistry;\n\n\tconst changeLanguage = lng => {\n\t\ti18n.changeLanguage(lng);\n\t};\n\n\tconst renderData = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<InfoContainer>\n\t\t\t\t\t<DashboardTile\n\t\t\t\t\t\tbg={\"warning\"}\n\t\t\t\t\t\ticon={\"icons/cases.svg\"}\n\t\t\t\t\t\ttitle={t(\"CASES\")}\n\t\t\t\t\t\ttotal={local_total_cases}\n\t\t\t\t\t\tnewCases={local_new_cases}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<DashboardTile\n\t\t\t\t\t\tbg={\"info\"}\n\t\t\t\t\t\ticon={\"icons/treatment.svg\"}\n\t\t\t\t\t\ttitle={t(\"Active Cases\")}\n\t\t\t\t\t\ttotal={local_total_cases - local_recovered}\n\t\t\t\t\t\tnewCases={null}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<DashboardTile\n\t\t\t\t\t\tbg={\"danger\"}\n\t\t\t\t\t\ticon={\"icons/deaths.svg\"}\n\t\t\t\t\t\ttitle={t(\"DEATHS\")}\n\t\t\t\t\t\ttotal={local_deaths}\n\t\t\t\t\t\tnewCases={local_new_deaths}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<DashboardTile\n\t\t\t\t\t\tbg={\"success\"}\n\t\t\t\t\t\ticon={\"icons/recovered.svg\"}\n\t\t\t\t\t\ttitle={t(\"RECOVERED\")}\n\t\t\t\t\t\ttotal={local_recovered}\n\t\t\t\t\t\tnewCases={null}\n\t\t\t\t\t/>\n\t\t\t\t</InfoContainer>\n\t\t\t\t<h2>{t(\"HOSPITAL_STATUS\")}</h2>\n\t\t\t\t<TotalHospitalCount>\n\t\t\t\t\t{t(\"TOTAL_INDIVIDUALS_IN_HOSPITALS\")} :\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<CountUp\n\t\t\t\t\t\t\tstart={0}\n\t\t\t\t\t\t\tend={\n\t\t\t\t\t\t\t\tlocal_total_number_of_individuals_in_hospitals\n\t\t\t\t\t\t\t\t\t? local_total_number_of_individuals_in_hospitals\n\t\t\t\t\t\t\t\t\t: 0\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelay={0}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{({ countUpRef }) => (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<span ref={countUpRef} />\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</CountUp>\n\t\t\t\t\t</span>\n\t\t\t\t</TotalHospitalCount>\n\t\t\t\t<HospitalListContainer>\n\t\t\t\t\t{hospital_data &&\n\t\t\t\t\t\thospital_data.map((hospital, index) => {\n\t\t\t\t\t\t\treturn <HospitalCard hospitalData={hospital} key={index} />;\n\t\t\t\t\t\t})}\n\t\t\t\t</HospitalListContainer>\n\t\t\t\t<LastUpdatedContainer>\n\t\t\t\t\t<span>{t(\"LAST_UPDATED\")}:</span>\n\t\t\t\t\t<span>{update_date_time}</span>\n\t\t\t\t</LastUpdatedContainer>\n\t\t\t</>\n\t\t);\n\t};\n\n\treturn (\n\t\t<DashboardStyles>\n\t\t\t<LanguageSelection>\n\t\t\t\t<button\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttextDecoration: i18n.language === \"en\" && \"underline\"\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={() => changeLanguage(\"en\")}\n\t\t\t\t>\n\t\t\t\t\tEnglish\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttextDecoration: i18n.language === \"sn\" && \"underline\"\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={() => changeLanguage(\"sn\")}\n\t\t\t\t>\n\t\t\t\t\tසිංහල\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttextDecoration: i18n.language === \"ta\" && \"underline\"\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={() => changeLanguage(\"ta\")}\n\t\t\t\t>\n\t\t\t\t\tதமிழ்\n\t\t\t\t</button>\n\t\t\t</LanguageSelection>\n\n\t\t\t<h1>{t(\"APP_TITLE\")}</h1>\n\n\t\t\t{dataStore.isLoading ? <Loader /> : renderData()}\n\n\t\t\t<p>{t(\"DATA_SOURCE\")} : www.hpb.health.gov.lk </p>\n\n\t\t\t<GitHubButton\n\t\t\t\thref=\"https://github.com/dhanukaperera/sl-covid19-web\"\n\t\t\t\tdata-size=\"large\"\n\t\t\t\taria-label=\"Star dhanukaperera/sl-covid19-web on GitHub\"\n\t\t\t>\n\t\t\t\tStar\n\t\t\t</GitHubButton>\n\t\t</DashboardStyles>\n\t);\n});\n\nexport default App;\n\nconst LanguageSelection = styled.div`\n\tdisplay: flex;\n\tbutton {\n\t\tbackground: #fff;\n\t\tcolor: black;\n\t\tborder: none;\n\t\theight: 2rem;\n\t\twidth: 4rem;\n\t}\n`;\n\nconst DashboardStyles = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tpadding-bottom: 2rem;\n\n\th1 {\n\t\tpadding: 0 1rem;\n\t\ttext-align: center;\n\t}\n\n\th1,\n\th2,\n\th3 {\n\t\tfont-weight: 300;\n\t\ttext-align: center;\n\t}\n`;\n\nconst InfoContainer = styled.div`\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tjustify-content: space-around;\n`;\n\nconst HospitalListContainer = styled.div`\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tjustify-content: space-evenly;\n`;\n\nconst TotalHospitalCount = styled.div`\n\tfont-size: 20px;\n\tborder: 1px solid;\n\tpadding: 1rem;\n\ttext-align: center;\n\tborder-radius: 6px;\n\tmargin: 1rem;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\n\t@media screen and (min-width: 600px) {\n\t\tflex-direction: row;\n\t}\n\n\tspan {\n\t\tcolor: #e74c3c;\n\t\tfont-weight: 600;\n\t\tfont-size: 30px;\n\t\tpadding: 0 0.5rem;\n\t}\n`;\n\nconst LastUpdatedContainer = styled.div`\n\ttext-align: center;\n\tpadding: 0 1rem;\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tjustify-content: center;\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { \"Service-Worker\": \"script\" }\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\");\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf(\"javascript\") === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\n// the translations\n// (tip move them in a JSON file and import them)\nconst resources = {\n\ten: {\n\t\ttranslation: {\n\t\t\tAPP_TITLE: \"Sri Lanka COVID-19 Status\",\n\t\t\tCASES: \"Cases\",\n\t\t\t\"Active Cases\": \"Active Cases\",\n\t\t\tDEATHS: \"Deaths\",\n\t\t\tRECOVERED: \"Recovered\",\n\t\t\tHOSPITAL_STATUS: \"Hospital Status\",\n\t\t\tTOTAL_INDIVIDUALS_IN_HOSPITALS: \"Total Individuals in Hospitals\",\n\t\t\tTESTED: \"Tested\",\n\t\t\tTREATMENT: \"Treatment\",\n\t\t\tLOCAL: \"Local\",\n\t\t\tFOREIGN: \"Foreign\",\n\t\t\tTOTAL: \"Total\",\n\t\t\tLAST_UPDATED: \"Last Updated\",\n\t\t\tDATA_SOURCE: \"Data Source\"\n\t\t}\n\t},\n\n\tsn: {\n\t\ttranslation: {\n\t\t\tAPP_TITLE: \"ශ්‍රී ලංකාවේ COVID-19 තත්වය\",\n\t\t\tCASES: \"තහවුරු රෝගීන්\",\n\t\t\t\"Active Cases\": \"ප්‍රතිකාර ලබන\",\n\t\t\tDEATHS: \"මරණ\",\n\t\t\tRECOVERED: \"සුවය ලැබූවන්\",\n\t\t\tHOSPITAL_STATUS: \"රෝහල් තත්වය\",\n\t\t\tTOTAL_INDIVIDUALS_IN_HOSPITALS: \"ප්‍රතිකාර ලබන සැක සහිත රෝගීන් සංඛ්‍යාව\",\n\t\t\tTESTED: \"පරීක්ෂා කර ඇත\",\n\t\t\tTREATMENT: \"ප්‍රතිකාර ලබන\",\n\t\t\tLOCAL: \"දේශීය\",\n\t\t\tFOREIGN: \"විදේශීය\",\n\t\t\tTOTAL: \"එකතුව\",\n\t\t\tLAST_UPDATED: \"අවසන් වරට යාවත්කාලීන කරන ලදි\",\n\t\t\tDATA_SOURCE: \"දත්ත මූලාශ්රය\"\n\t\t}\n\t},\n\tta: {\n\t\ttranslation: {\n\t\t\tAPP_TITLE: \"இலங்கையில் COVID-19 நிலை\",\n\t\t\tCASES: \"நோயாளிகள்\",\n\t\t\t\"Active Cases\": \"சிகிச்சை பெறும்\",\n\t\t\tDEATHS: \"மரணங்கள்\",\n\t\t\tRECOVERED: \"குணமாகும்\",\n\t\t\tHOSPITAL_STATUS: \"மருத்துவமனை நிலை\",\n\t\t\tTOTAL_INDIVIDUALS_IN_HOSPITALS:\n\t\t\t\t\"மருத்துவமனைகளில் மொத்த நபர்களின் எண்ணிக்கை\",\n\t\t\tTESTED: \"சோதிக்கப்பட்டது\",\n\t\t\tTREATMENT: \"சிகிச்சை பெறுதல்\",\n\t\t\tLOCAL: \"உள்ளூர்\",\n\t\t\tFOREIGN: \"வெளிநாட்டு\",\n\t\t\tTOTAL: \"மொத்தம்\",\n\t\t\tLAST_UPDATED: \"கடைசியாக புதுப்பிக்கப்பட்டது\",\n\t\t\tDATA_SOURCE: \"தரவு மூலம்\"\n\t\t}\n\t}\n};\n\ni18n\n\t.use(initReactI18next) // passes i18n down to react-i18next\n\t.init({\n\t\tresources,\n\t\tlng: \"sn\",\n\n\t\tkeySeparator: false, // we do not use keys in form messages.welcome\n\n\t\tinterpolation: {\n\t\t\tescapeValue: false // react already safes from xss\n\t\t}\n\t});\n\nexport default i18n;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport i18n from \"./i18n\";\nimport { I18nextProvider } from \"react-i18next\";\nReactDOM.render(\n\t<I18nextProvider i18n={i18n}>\n\t\t<App />\n\t</I18nextProvider>,\n\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}